Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\PIC_STEPPER_TEST_3.X.production.sym \
  --cmf=dist/default/production\PIC_STEPPER_TEST_3.X.production.cmf -z \
  -Q16F877A -oC:\Users\DIVYAN~1\AppData\Local\Temp\sblg.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/PIC_STEPPER_TEST_3.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\DIVYAN~1\AppData\Local\Temp\sblg.o \
  dist/default/production\PIC_STEPPER_TEST_3.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\DIVYAN~1\AppData\Local\Temp\sblg.o
                end_init                              0        0        3        0       0
                config                             2007     2007        1        0       4
dist/default/production\PIC_STEPPER_TEST_3.X.production.o
                cinit                               7E1      7E1       1F      FC2       0
                config                             2007     2007        1        0       4
                text11                              EA9      EA9        B     1D52       0
                text10                              F2B      F2B       59     1E56       0
                text9                                16       16       27       2C       0
                text8                               480      480      361      900       0
                text7                               1E8      1E8      298      3D0       0
                text6                               F07      F07       24     1E0E       0
                text5                               F84      F84       7C     1F08       0
                text4                                3D       3D       BA       7A       0
                text3                               EE5      EE5       22     1DCA       0
                text2                                F7       F7       F1      1EE       0
                text1                               EB4      EB4        F     1D68       0
                maintext                            ED3      ED3       12     1DA6       0
                cstackBANK0                          20       20       3D       20       1
                cstackCOMMON                         70       70        E       70       1
                inittext                              3        3       13        0       0
                dataBANK1                            A0       A0       10       A0       1
                dataBANK0                            5D       5D        8       20       1
                nvBANK0                              65       65        2       20       1
                idataBANK1                          EC3      EC3       10     1D86       0
                idataBANK0                          EA1      EA1        8     1D42       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7E1      7E1       1F         0
                text11                              EA9      EA9        B         0
                text10                              F2B      F2B       59         0
                text9                                16       16       27         0
                text8                               480      480      361         0
                text7                               1E8      1E8      298         0
                text6                               F07      F07       24         0
                text5                               F84      F84       7C         0
                text4                                3D       3D       BA         0
                text3                               EE5      EE5       22         0
                text2                                F7       F7       F1         0
                text1                               EB4      EB4        F         0
                maintext                            ED3      ED3       12         0
                inittext                              3        3       13         0
                idataBANK1                          EC3      EC3       10         0
                idataBANK0                          EA1      EA1        8         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       3D         1
                dataBANK0                            5D       5D        8         1
                nvBANK0                              65       65        2         1

        CLASS   BANK1          
                dataBANK1                            A0       A0       10         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000016  000016         0       0  CODE        2
                cstackBANK0                    000020  000047  000067        20       1  BANK0       1
                text9                          000016  000027  00003D        2C       0  CODE        2
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                text4                          00003D  0000BA  0000F7        7A       0  CODE        2
                dataBANK1                      0000A0  000010  0000B0        A0       1  BANK1       1
                text2                          0000F7  0000F1  0001E8       1EE       0  CODE        2
                text7                          0001E8  000298  000480       3D0       0  CODE        2
                text8                          000480  000361  0007E1       900       0  CODE        2
                cinit                          0007E1  00001F  000800       FC2       0  CODE        2
                idataBANK0                     000EA1  000008  000EA9      1D42       0  CODE        2
                text11                         000EA9  00000B  000EB4      1D52       0  CODE        2
                text1                          000EB4  00000F  000EC3      1D68       0  CODE        2
                idataBANK1                     000EC3  000010  000ED3      1D86       0  CODE        2
                maintext                       000ED3  000012  000EE5      1DA6       0  CODE        2
                text3                          000EE5  000022  000F07      1DCA       0  CODE        2
                text6                          000F07  000024  000F2B      1E0E       0  CODE        2
                text10                         000F2B  000059  000F84      1E56       0  CODE        2
                text5                          000F84  00007C  001000      1F08       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0067-006F              9           1
        BANK1            00B0-00EF             40           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0800-0EA0            6A1           2
                         1000-1FFF            800
        CONST            0800-0EA0            100           2
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0800-0EA0            100           2
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0067-006F              9           1
                         00B0-00EF             40
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0800-0EA0            6A1           2
                         1000-1FFF           1000
        STRING           0800-0EA0            100           2
                         1000-1FFF            100

                                  Symbol Table

?__Umul8_16              cstackCOMMON 0070
?___awmod                cstackCOMMON 0070
?___fladd                cstackCOMMON 0070
?___flmul                cstackBANK0  0020
?___flsub                cstackBANK0  003A
?___fltol                cstackBANK0  0042
?___xxtofl               cstackCOMMON 0070
?_readADC                cstackCOMMON 0070
SETSPEED@i               cstackBANK0  0055
SETSPEED@maxstep         cstackBANK0  0051
SETSPEED@t               cstackBANK0  0059
SETSPEED@value           cstackBANK0  0053
SETSPEED@y               cstackBANK0  0057
_ADCON0                  (abs)        001F
_ADCON0bits              (abs)        001F
_ADCON1                  (abs)        009F
_ADCON1bits              (abs)        009F
_ADRESH                  (abs)        001E
_ADRESL                  (abs)        009E
_HALF_STEP               dataBANK1    00A0
_INITSTEPPER             text11       0EA9
_PORTD                   (abs)        0008
_SETSPEED                text2        00F7
_TRISA                   (abs)        0085
_TRISD                   (abs)        0088
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__Hcinit                 cinit        0800
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       2008
__HcstackBANK0           cstackBANK0  0000
__HcstackCOMMON          cstackCOMMON 0000
__HdataBANK0             dataBANK0    0000
__HdataBANK1             dataBANK1    0000
__Heeprom_data           eeprom_data  0000
__Hend_init              end_init     0003
__Hfunctab               functab      0000
__HidataBANK0            idataBANK0   0000
__HidataBANK1            idataBANK1   0000
__Hinit                  init         0000
__Hinittext              inittext     0000
__Hintentry              intentry     0000
__Hmaintext              maintext     0000
__HnvBANK0               nvBANK0      0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0000
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hsfr2                  sfr2         0000
__Hsfr3                  sfr3         0000
__Hspace_0               (abs)        1000
__Hspace_1               (abs)        00B0
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0000
__Hspace_4               (abs)        400F
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__Lcinit                 cinit        07E1
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       0000
__LcstackBANK0           cstackBANK0  0000
__LcstackCOMMON          cstackCOMMON 0000
__LdataBANK0             dataBANK0    0000
__LdataBANK1             dataBANK1    0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     0000
__Lfunctab               functab      0000
__LidataBANK0            idataBANK0   0000
__LidataBANK1            idataBANK1   0000
__Linit                  init         0000
__Linittext              inittext     0000
__Lintentry              intentry     0000
__Lmaintext              maintext     0000
__LnvBANK0               nvBANK0      0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lsfr2                  sfr2         0000
__Lsfr3                  sfr3         0000
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lspace_4               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        1000
__S1                     (abs)        00B0
__S2                     (abs)        0000
__S3                     (abs)        0000
__Umul8_16               text9        0016
__Umul8_16@multiplicand  cstackCOMMON 0070
__Umul8_16@multiplier    cstackCOMMON 0078
__Umul8_16@product       cstackCOMMON 0074
__Umul8_16@word_mpld     cstackCOMMON 0076
___awmod                 text10       0F2B
___awmod@counter         cstackCOMMON 0075
___awmod@dividend        cstackCOMMON 0072
___awmod@divisor         cstackCOMMON 0070
___awmod@sign            cstackCOMMON 0076
___fladd                 text7        01E8
___fladd@a               cstackCOMMON 0074
___fladd@aexp            cstackCOMMON 0079
___fladd@b               cstackCOMMON 0070
___fladd@bexp            cstackCOMMON 007A
___fladd@grs             cstackCOMMON 007B
___fladd@signs           cstackCOMMON 0078
___flmul                 text8        0480
___flmul@a               cstackBANK0  0024
___flmul@aexp            cstackBANK0  0032
___flmul@b               cstackBANK0  0020
___flmul@bexp            cstackBANK0  0033
___flmul@grs             cstackBANK0  002E
___flmul@prod            cstackBANK0  0034
___flmul@sign            cstackBANK0  002D
___flmul@temp            cstackBANK0  0038
___flsub                 text6        0F07
___flsub@a               cstackBANK0  003A
___flsub@b               cstackBANK0  003E
___fltol                 text5        0F84
___fltol@exp1            cstackBANK0  004C
___fltol@f1              cstackBANK0  0042
___fltol@sign1           cstackBANK0  004B
___int_sp                stack        0000
___latbits               (abs)        0002
___sp                    stack        0000
___stackhi               (abs)        0000
___stacklo               (abs)        0000
___xxtofl                text4        003D
___xxtofl@arg            cstackCOMMON 007A
___xxtofl@exp            cstackCOMMON 0079
___xxtofl@sign           cstackCOMMON 0078
___xxtofl@val            cstackCOMMON 0070
__end_of_INITSTEPPER     text11       0EB4
__end_of_SETSPEED        text2        01E8
__end_of__Umul8_16       text9        003D
__end_of___awmod         text10       0F84
__end_of___fladd         text7        0480
__end_of___flmul         text8        07E1
__end_of___flsub         text6        0F2B
__end_of___fltol         text5        1000
__end_of___xxtofl        text4        00F7
__end_of__initialization cinit        07FC
__end_of_init_adc        text1        0EC3
__end_of_main            maintext     0EE5
__end_of_readADC         text3        0F07
__initialization         cinit        07E1
__pcstackBANK0           cstackBANK0  0020
__pcstackCOMMON          cstackCOMMON 0070
__pdataBANK0             dataBANK0    005D
__pdataBANK1             dataBANK1    00A0
__pidataBANK0            idataBANK0   0EA1
__pidataBANK1            idataBANK1   0EC3
__pmaintext              maintext     0ED3
__pnvBANK0               nvBANK0      0065
__ptext1                 text1        0EB4
__ptext10                text10       0F2B
__ptext11                text11       0EA9
__ptext2                 text2        00F7
__ptext3                 text3        0EE5
__ptext4                 text4        003D
__ptext5                 text5        0F84
__ptext6                 text6        0F07
__ptext7                 text7        01E8
__ptext8                 text8        0480
__ptext9                 text9        0016
__size_of_INITSTEPPER    (abs)        0000
__size_of_SETSPEED       (abs)        0000
__size_of__Umul8_16      (abs)        0000
__size_of___awmod        (abs)        0000
__size_of___fladd        (abs)        0000
__size_of___flmul        (abs)        0000
__size_of___flsub        (abs)        0000
__size_of___fltol        (abs)        0000
__size_of___xxtofl       (abs)        0000
__size_of_init_adc       (abs)        0000
__size_of_main           (abs)        0000
__size_of_readADC        (abs)        0000
_flag                    nvBANK0      0065
_init_adc                text1        0EB4
_main                    maintext     0ED3
_readADC                 text3        0EE5
btemp                    (abs)        007E
end_of_initialization    cinit        07FC
init_fetch0              inittext     0003
init_ram0                inittext     0007
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
readADC@cha              cstackCOMMON 0070
reset_vec                reset_vec    0000
start                    init         0000
start_initialization     cinit        07E1
wtemp0                   (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 37 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_INITSTEPPER
		_SETSPEED
		_init_adc
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _init_adc *****************
 Defined at:
		line 12 in file "MYADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SETSPEED *****************
 Defined at:
		line 42 in file "MYSTEPPER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   53[BANK0 ] int 
  t               4   57[BANK0 ] unsigned long 
  value           2   51[BANK0 ] unsigned int 
  y               2   55[BANK0 ] int 
  maxstep         2   49[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      12       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awmod
		___flmul
		___flsub
		___fltol
		___xxtofl
		_readADC
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _readADC *****************
 Defined at:
		line 21 in file "MYADC.c"
 Parameters:    Size  Location     Type
  cha             2    0[COMMON] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SETSPEED
 This function uses a non-reentrant model


 *************** function ___xxtofl *****************
 Defined at:
		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
 Parameters:    Size  Location     Type
  sign            1    wreg     unsigned char 
  val             4    0[COMMON] long 
 Auto vars:     Size  Location     Type
  sign            1    8[COMMON] unsigned char 
  arg             4   10[COMMON] unsigned long 
  exp             1    9[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMMON] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         6       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:        14       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SETSPEED
 This function uses a non-reentrant model


 *************** function ___fltol *****************
 Defined at:
		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
 Parameters:    Size  Location     Type
  f1              4   34[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  exp1            1   44[BANK0 ] unsigned char 
  sign1           1   43[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   34[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0      11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SETSPEED
 This function uses a non-reentrant model


 *************** function ___flsub *****************
 Defined at:
		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
 Parameters:    Size  Location     Type
  a               4   26[BANK0 ] long 
  b               4   30[BANK0 ] long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4   26[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___fladd
 This function is called by:
		_SETSPEED
 This function uses a non-reentrant model


 *************** function ___fladd *****************
 Defined at:
		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
 Parameters:    Size  Location     Type
  b               4    0[COMMON] long 
  a               4    4[COMMON] long 
 Auto vars:     Size  Location     Type
  grs             1   11[COMMON] unsigned char 
  bexp            1   10[COMMON] unsigned char 
  aexp            1    9[COMMON] unsigned char 
  signs           1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMMON] unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         8       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          0       8       0       0       0
      Totals:        12       8       0       0       0
Total ram usage:       20 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___flsub
 This function uses a non-reentrant model


 *************** function ___flmul *****************
 Defined at:
		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
 Parameters:    Size  Location     Type
  b               4    0[BANK0 ] unsigned char 
  a               4    4[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  prod            4   20[BANK0 ] struct .
  grs             4   14[BANK0 ] unsigned long 
  temp            2   24[BANK0 ] struct .
  bexp            1   19[BANK0 ] unsigned char 
  aexp            1   18[BANK0 ] unsigned char 
  sign            1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0      13       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0      26       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		__Umul8_16
 This function is called by:
		_SETSPEED
 This function uses a non-reentrant model


 *************** function __Umul8_16 *****************
 Defined at:
		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    8[COMMON] unsigned char 
  word_mpld       2    6[COMMON] unsigned int 
  product         2    4[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         5       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         9       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___flmul
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] int 
  dividend        2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  sign            1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SETSPEED
 This function uses a non-reentrant model


 *************** function _INITSTEPPER *****************
 Defined at:
		line 35 in file "MYSTEPPER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c
		___flmul       		CODE           	0480	0000	865

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c estimated size: 865

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c
		__Umul8_16     		CODE           	0016	0000	39

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c estimated size: 39

MYSTEPPER.c
		_SETSPEED      		CODE           	00F7	0000	241
		_INITSTEPPER   		CODE           	0EA9	0000	11

MYSTEPPER.c estimated size: 252

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c
		___awmod       		CODE           	0F2B	0000	89

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c estimated size: 89

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c
		___flsub       		CODE           	0F07	0000	36
		___fladd       		CODE           	01E8	0000	664

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c estimated size: 700

shared
		__initialization		CODE           	07E1	0000	27

shared estimated size: 27

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c
		___fltol       		CODE           	0F84	0000	124

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c estimated size: 124

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c
		___xxtofl      		CODE           	003D	0000	186

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c estimated size: 186

MYADC.c
		_init_adc      		CODE           	0EB4	0000	15
		_readADC       		CODE           	0EE5	0000	34

MYADC.c estimated size: 49

main.c
		_main          		CODE           	0ED3	0000	18

main.c estimated size: 18

